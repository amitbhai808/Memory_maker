{"ast":null,"code":"var _jsxFileName = \"/Users/amitpajiyar/Desktop/Memory Maker/client/src/components/Memory Test Game/MemorizeMajorLIst.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MemorizeMajorList() {\n  _s();\n  const data = {\n    0: \"Sea\",\n    1: \"Tea\",\n    2: \"Hen\",\n    3: \"Maa\",\n    4: \"Hero\",\n    5: \"Law\",\n    6: \"Ash\",\n    7: \"Cow\",\n    8: \"Fox\",\n    9: \"Bee\",\n    10: \"Dosa\",\n    11: \"Dadi\",\n    12: \"Don\",\n    13: \"Tom\",\n    14: \"Door\",\n    15: \"Tall\",\n    16: \"Dog\",\n    17: \"Daku\",\n    18: \"TV\",\n    19: \"Tap\",\n    20: \"Nose\",\n    21: \"Net\",\n    22: \"Nani\",\n    23: \"Nami\",\n    24: \"Nari\",\n    25: \"Nail\",\n    26: \"Naag\",\n    27: \"Neck\",\n    28: \"Navy\",\n    29: \"Noob\",\n    30: \"Mouse\",\n    31: \"Meat\",\n    32: \"Money\",\n    33: \"Mommy\",\n    34: \"Merry\",\n    35: \"Meal\",\n    36: \"Magi\",\n    37: \"Mic\",\n    38: \"Movie\",\n    39: \"Map\",\n    40: \"Rose\",\n    41: \"Road\",\n    42: \"Rain\",\n    43: \"Ram\",\n    44: \"Error\",\n    45: \"Rail\",\n    46: \"Rich\",\n    47: \"Rock\",\n    48: \"Roof\",\n    49: \"Rope\",\n    50: \"Lazy\",\n    51: \"Load\",\n    52: \"Loan\",\n    53: \"Lime\",\n    54: \"Healer\",\n    55: \"Lily\",\n    56: \"Leech\",\n    57: \"Lake\",\n    58: \"Luffy\",\n    59: \"Lip\",\n    60: \"Cheese\",\n    61: \"Cheat\",\n    62: \"Chain\",\n    63: \"Jam\",\n    64: \"Chair\",\n    65: \"Jail\",\n    66: \"Gojo\",\n    67: \"Check\",\n    68: \"Chief\",\n    69: \"Shop\",\n    70: \"Kiss\",\n    71: \"Kite\",\n    72: \"Gun\",\n    73: \"Gum\",\n    74: \"Car\",\n    75: \"Kill\",\n    76: \"Cash\",\n    77: \"Cake\",\n    78: \"Coffee\",\n    79: \"Cap\",\n    80: \"Vase\",\n    81: \"Food\",\n    82: \"Van\",\n    83: \"FM\",\n    84: \"Fire\",\n    85: \"Fail\",\n    86: \"Fish\",\n    87: \"Fake\",\n    88: \"FIFA\",\n    89: \"VIP\",\n    90: \"Bus\",\n    91: \"Bat\",\n    92: \"Pen\",\n    93: \"Poem\",\n    94: \"Bar\",\n    95: \"Bell\",\n    96: \"Bag\",\n    97: \"Book\",\n    98: \"Beef\",\n    99: \"Baby\",\n    100: \"Disease\"\n  };\n  const [output, setOutput] = useState('');\n  const [quizOptions, setQuizOptions] = useState([]);\n  const [correctAnswer, setCorrectAnswer] = useState('');\n  const [clickedOption, setClickedOption] = useState(null);\n  const [feedback, setFeedback] = useState('');\n  const getRandomKey = () => {\n    const keys = Object.keys(data);\n    return keys[Math.floor(Math.random() * keys.length)];\n  };\n  const generateQuizOptions = () => {\n    const correctKey = getRandomKey();\n    const correctValue = data[correctKey];\n\n    // Prepare to generate options\n    const options = new Set();\n    options.add(correctKey); // Add the correct answer\n\n    // Generate random incorrect options\n    while (options.size < 4) {\n      const randomKey = getRandomKey();\n      options.add(randomKey);\n    }\n    setQuizOptions(Array.from(options)); // Convert Set to Array\n    setOutput(correctValue); // Set the output to the correct value\n    setCorrectAnswer(correctKey); // Store the correct answer key\n    setClickedOption(null); // Reset the clicked option\n    setFeedback(''); // Reset feedback\n  };\n  const checkAnswer = option => {\n    setClickedOption(option);\n    if (option === correctAnswer) {\n      setFeedback('Correct!');\n    } else {\n      setFeedback(`Wrong! The correct answer is: ${correctAnswer}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mx-10 my-5 text-3xl font-bold\",\n        children: \"Memorize Major List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 m-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold my-10\",\n        children: \"Quiz: Select the correct number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-14 p-1 my-6 border-2 border-gray-500 text-4xl font-semibold justify-center items-center flex\",\n        children: output\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-4\",\n        children: quizOptions.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-72 h-12 m-4 border-2 border-gray-500 shadow-lg rounded-lg text-3xl font-bold flex justify-center items-center \n                            ${clickedOption === option ? option === correctAnswer ? 'bg-green-500' : 'bg-red-500' : 'bg-gray-100'} \n                            hover:bg-gray-300/80 hover:translate-y-1`,\n          onClick: () => checkAnswer(option) // Check answer on click\n          ,\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateQuizOptions,\n        className: \"mt-4 mb-6 bg-blue-500 text-white p-2 rounded-lg border-t\",\n        children: \"Generate Quiz Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl font-semibold text-center mt-4\",\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(MemorizeMajorList, \"M3vkAnblYImJiYTUl3+Og4k5s2Y=\");\n_c = MemorizeMajorList;\nvar _c;\n$RefreshReg$(_c, \"MemorizeMajorList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","MemorizeMajorList","_s","data","output","setOutput","quizOptions","setQuizOptions","correctAnswer","setCorrectAnswer","clickedOption","setClickedOption","feedback","setFeedback","getRandomKey","keys","Object","Math","floor","random","length","generateQuizOptions","correctKey","correctValue","options","Set","add","size","randomKey","Array","from","checkAnswer","option","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["/Users/amitpajiyar/Desktop/Memory Maker/client/src/components/Memory Test Game/MemorizeMajorLIst.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function MemorizeMajorList() {\n    const data = {\n        0: \"Sea\",\n        1: \"Tea\",\n        2: \"Hen\",\n        3: \"Maa\",\n        4: \"Hero\",\n        5: \"Law\",\n        6: \"Ash\",\n        7: \"Cow\",\n        8: \"Fox\",\n        9: \"Bee\",\n        10: \"Dosa\",\n        11: \"Dadi\",\n        12: \"Don\",\n        13: \"Tom\",\n        14: \"Door\",\n        15: \"Tall\",\n        16: \"Dog\",\n        17: \"Daku\",\n        18: \"TV\",\n        19: \"Tap\",\n        20: \"Nose\",\n        21: \"Net\",\n        22: \"Nani\",\n        23: \"Nami\",\n        24: \"Nari\",\n        25: \"Nail\",\n        26: \"Naag\",\n        27: \"Neck\",\n        28: \"Navy\",\n        29: \"Noob\",\n        30: \"Mouse\",\n        31: \"Meat\",\n        32: \"Money\",\n        33: \"Mommy\",\n        34: \"Merry\",\n        35: \"Meal\",\n        36: \"Magi\",\n        37: \"Mic\",\n        38: \"Movie\",\n        39: \"Map\",\n        40: \"Rose\",\n        41: \"Road\",\n        42: \"Rain\",\n        43: \"Ram\",\n        44: \"Error\",\n        45: \"Rail\",\n        46: \"Rich\",\n        47: \"Rock\",\n        48: \"Roof\",\n        49: \"Rope\",\n        50: \"Lazy\",\n        51: \"Load\",\n        52: \"Loan\",\n        53: \"Lime\",\n        54: \"Healer\",\n        55: \"Lily\",\n        56: \"Leech\",\n        57: \"Lake\",\n        58: \"Luffy\",\n        59: \"Lip\",\n        60: \"Cheese\",\n        61: \"Cheat\",\n        62: \"Chain\",\n        63: \"Jam\",\n        64: \"Chair\",\n        65: \"Jail\",\n        66: \"Gojo\",\n        67: \"Check\",\n        68: \"Chief\",\n        69: \"Shop\",\n        70: \"Kiss\",\n        71: \"Kite\",\n        72: \"Gun\",\n        73: \"Gum\",\n        74: \"Car\",\n        75: \"Kill\",\n        76: \"Cash\",\n        77: \"Cake\",\n        78: \"Coffee\",\n        79: \"Cap\",\n        80: \"Vase\",\n        81: \"Food\",\n        82: \"Van\",\n        83: \"FM\",\n        84: \"Fire\",\n        85: \"Fail\",\n        86: \"Fish\",\n        87: \"Fake\",\n        88: \"FIFA\",\n        89: \"VIP\",\n        90: \"Bus\",\n        91: \"Bat\",\n        92: \"Pen\",\n        93: \"Poem\",\n        94: \"Bar\",\n        95: \"Bell\",\n        96: \"Bag\",\n        97: \"Book\",\n        98: \"Beef\",\n        99: \"Baby\",\n        100: \"Disease\"\n    };\n\n    const [output, setOutput] = useState('');\n    const [quizOptions, setQuizOptions] = useState([]);\n    const [correctAnswer, setCorrectAnswer] = useState('');\n    const [clickedOption, setClickedOption] = useState(null);\n    const [feedback, setFeedback] = useState('');\n\n    const getRandomKey = () => {\n        const keys = Object.keys(data);\n        return keys[Math.floor(Math.random() * keys.length)];\n    };\n\n    const generateQuizOptions = () => {\n        const correctKey = getRandomKey();\n        const correctValue = data[correctKey];\n\n        // Prepare to generate options\n        const options = new Set();\n        options.add(correctKey); // Add the correct answer\n\n        // Generate random incorrect options\n        while (options.size < 4) {\n            const randomKey = getRandomKey();\n            options.add(randomKey);\n        }\n\n        setQuizOptions(Array.from(options)); // Convert Set to Array\n        setOutput(correctValue); // Set the output to the correct value\n        setCorrectAnswer(correctKey); // Store the correct answer key\n        setClickedOption(null); // Reset the clicked option\n        setFeedback(''); // Reset feedback\n    };\n\n    const checkAnswer = (option) => {\n        setClickedOption(option);\n        if (option === correctAnswer) {\n            setFeedback('Correct!');\n        } else {\n            setFeedback(`Wrong! The correct answer is: ${correctAnswer}`);\n        }\n    };\n\n    return (\n        <>\n            <div>\n                <h1 className='mx-10 my-5 text-3xl font-bold'>Memorize Major List</h1>\n            </div>\n\n            {/* Quiz */}\n            <div className='w-1/2 m-10'>\n                <h2 className='text-2xl font-semibold my-10'>Quiz: Select the correct number:</h2>\n                <div className='w-full h-14 p-1 my-6 border-2 border-gray-500 text-4xl font-semibold justify-center items-center flex'>{output}</div>\n\n                {/* Options */}\n                <div className='grid grid-cols-2 gap-4'>\n                    {quizOptions.map((option) => (\n                        <div\n                            key={option}\n                            className={`w-72 h-12 m-4 border-2 border-gray-500 shadow-lg rounded-lg text-3xl font-bold flex justify-center items-center \n                            ${clickedOption === option ? (option === correctAnswer ? 'bg-green-500' : 'bg-red-500') : 'bg-gray-100'} \n                            hover:bg-gray-300/80 hover:translate-y-1`}\n                            onClick={() => checkAnswer(option)} // Check answer on click\n                        >\n                            {option}\n                        </div>\n                    ))}\n                </div>\n                <button\n                    onClick={generateQuizOptions}\n                    className='mt-4 mb-6 bg-blue-500 text-white p-2 rounded-lg border-t'\n                >\n                    Generate Quiz Options\n                </button>\n\n                {/* Feedback message */}\n                {feedback && <div className='text-xl font-semibold text-center mt-4'>{feedback}</div>}\n            </div>\n        </>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}